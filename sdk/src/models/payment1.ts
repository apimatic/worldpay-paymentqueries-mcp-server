/**
 * Payment QueriesLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  lazy,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema.js';
import {
  PaymentInstrument2,
  paymentInstrument2Schema,
} from './paymentInstrument2.js';
import { Value3, value3Schema } from './value3.js';

export interface Payment1 {
  /** The last event of a payment. Possible event values are:<ul><li>`Authorized`</li><li>`Refused`</li><li>`Sent for Cancellation`</li><li>`Sent for Refund`</li><li>`Sent for Settlement`</li><li>`Unknown`</li></ul> */
  lastEvent?: string;
  /** An object that contains information about the payment type. */
  paymentInstrument?: PaymentInstrument2;
  /** An object that contains payment amount and currency. */
  value?: Value3;
  additionalProperties?: Record<string, unknown>;
}

export const payment1Schema: Schema<Payment1> = typedExpandoObject(
  {
    lastEvent: ['lastEvent', optional(string())],
    paymentInstrument: [
      'paymentInstrument',
      optional(lazy(() => paymentInstrument2Schema)),
    ],
    value: ['value', optional(lazy(() => value3Schema))],
  },
  'additionalProperties',
  optional(unknown())
);
