/**
 * Payment QueriesLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  lazy,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema.js';
import { Type1, type1Schema } from './type1.js';
import { Value1, value1Schema } from './value1.js';

export interface RefundRequested {
  /** Worldpay has received your refund request. */
  eventName: string;
  /** The ISO 8601 date-time at which the event was created. */
  timestamp?: string;
  type?: Type1;
  /** Your refund reference */
  refundReference?: string;
  /** An object that contains the amount and currency requested for refund. */
  value?: Value1;
  /** Unique identifier generated by us for a single instance of an interaction (command) with the Worldpay API. */
  commandId?: string;
  additionalProperties?: Record<string, unknown>;
}

export const refundRequestedSchema: Schema<RefundRequested> = typedExpandoObject(
  {
    eventName: ['eventName', string()],
    timestamp: ['timestamp', optional(string())],
    type: ['type', optional(type1Schema)],
    refundReference: ['refundReference', optional(string())],
    value: ['value', optional(lazy(() => value1Schema))],
    commandId: ['commandId', optional(string())],
  },
  'additionalProperties',
  optional(unknown())
);
