/**
 * Payment QueriesLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { lazy, object, optional, Schema, string } from '../schema.js';
import { CategoryEnum, categoryEnumSchema } from './categoryEnum.js';
import { ExpiryDate, expiryDateSchema } from './expiryDate.js';
import { FundingTypeEnum, fundingTypeEnumSchema } from './fundingTypeEnum.js';
import { Number, numberSchema } from './number.js';

/** An object that contains information about the card used. */
export interface Card {
  /** An object that contains information about the card number. */
  number?: Number;
  /** Whether the card is classed as a consumer card or a card for commercial use. */
  category?: CategoryEnum;
  /** The [ISO 3166-1 Alpha-2 format](/products/reference/supported-countries-currencies#iso-country-codes) country code that the card was issued in. May return `N/A` where the country is unknown. */
  countryCode?: string;
  /** The expiry date of the card or network token (where the supplied paymentInstrument was `card/wallet+applepay`, `card/wallet+googlepay`, `card/networkToken`, `card/networkToken+applepay` or `card/networkToken+googlepay`). */
  expiryDate?: ExpiryDate;
  /** The name of the card issuer. */
  issuerName?: string;
  /** How the card is funded. */
  fundingType?: FundingTypeEnum;
  /** The card brand that the transaction was processed with. Sometimes referred to as the network or scheme. */
  brand?: string;
  /** The payment account reference (PAR) is a non-financial reference that uniquely identifies the underlying cardholder account. This allows you to correlate payments made from the same account with differing instruments (e.g. `card/plain` and `card/wallet+applepay`), where the same account funds the transaction. A PAR cannot be used to initiate a payment. */
  paymentAccountReference?: string;
}

export const cardSchema: Schema<Card> = object({
  number: ['number', optional(lazy(() => numberSchema))],
  category: ['category', optional(categoryEnumSchema)],
  countryCode: ['countryCode', optional(string())],
  expiryDate: ['expiryDate', optional(lazy(() => expiryDateSchema))],
  issuerName: ['issuerName', optional(string())],
  fundingType: ['fundingType', optional(fundingTypeEnumSchema)],
  brand: ['brand', optional(string())],
  paymentAccountReference: ['paymentAccountReference', optional(string())],
});
